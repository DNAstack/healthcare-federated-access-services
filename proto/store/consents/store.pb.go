// Copyright 2020 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/store/consents/store.proto

// Package consents provides Remembered Consents PB for storage
package consents

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// RequestMatchType defines what request is valid to use this consent.
type RememberedConsentPreference_RequestMatchType int32

const (
	RememberedConsentPreference_UNSPECIFIED RememberedConsentPreference_RequestMatchType = 0
	// SUBSET : request resource and scopes are subset of resource and scopes in
	// this item.
	RememberedConsentPreference_SUBSET RememberedConsentPreference_RequestMatchType = 1
	// ANYTHING : request anything.
	RememberedConsentPreference_ANYTHING RememberedConsentPreference_RequestMatchType = 2
)

var RememberedConsentPreference_RequestMatchType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "SUBSET",
	2: "ANYTHING",
}

var RememberedConsentPreference_RequestMatchType_value = map[string]int32{
	"UNSPECIFIED": 0,
	"SUBSET":      1,
	"ANYTHING":    2,
}

func (x RememberedConsentPreference_RequestMatchType) String() string {
	return proto.EnumName(RememberedConsentPreference_RequestMatchType_name, int32(x))
}

func (RememberedConsentPreference_RequestMatchType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ffa029a8674e90e, []int{0, 0}
}

// ReleaseType defines what to release.
type RememberedConsentPreference_ReleaseType int32

const (
	RememberedConsentPreference_UNKNOWN RememberedConsentPreference_ReleaseType = 0
	// SELECTED : release selected visas of this item.
	RememberedConsentPreference_SELECTED RememberedConsentPreference_ReleaseType = 1
	// ANYTHING_NEEDED: release anything request needed.
	RememberedConsentPreference_ANYTHING_NEEDED RememberedConsentPreference_ReleaseType = 2
)

var RememberedConsentPreference_ReleaseType_name = map[int32]string{
	0: "UNKNOWN",
	1: "SELECTED",
	2: "ANYTHING_NEEDED",
}

var RememberedConsentPreference_ReleaseType_value = map[string]int32{
	"UNKNOWN":         0,
	"SELECTED":        1,
	"ANYTHING_NEEDED": 2,
}

func (x RememberedConsentPreference_ReleaseType) String() string {
	return proto.EnumName(RememberedConsentPreference_ReleaseType_name, int32(x))
}

func (RememberedConsentPreference_ReleaseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ffa029a8674e90e, []int{0, 1}
}

// RememberedConsentPreference contains the consent a user has given for release
// of visas to a specific OAuth client.
type RememberedConsentPreference struct {
	ClientName           string                                       `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	CreateTime           *timestamp.Timestamp                         `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ExpireTime           *timestamp.Timestamp                         `protobuf:"bytes,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	RequestMatchType     RememberedConsentPreference_RequestMatchType `protobuf:"varint,4,opt,name=request_match_type,json=requestMatchType,proto3,enum=consents.RememberedConsentPreference_RequestMatchType" json:"request_match_type,omitempty"`
	RequestedResources   []string                                     `protobuf:"bytes,5,rep,name=requested_resources,json=requestedResources,proto3" json:"requested_resources,omitempty"`
	RequestedScopes      []string                                     `protobuf:"bytes,6,rep,name=requested_scopes,json=requestedScopes,proto3" json:"requested_scopes,omitempty"`
	ReleaseType          RememberedConsentPreference_ReleaseType      `protobuf:"varint,7,opt,name=release_type,json=releaseType,proto3,enum=consents.RememberedConsentPreference_ReleaseType" json:"release_type,omitempty"`
	SelectedVisas        []*RememberedConsentPreference_Visa          `protobuf:"bytes,8,rep,name=selected_visas,json=selectedVisas,proto3" json:"selected_visas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *RememberedConsentPreference) Reset()         { *m = RememberedConsentPreference{} }
func (m *RememberedConsentPreference) String() string { return proto.CompactTextString(m) }
func (*RememberedConsentPreference) ProtoMessage()    {}
func (*RememberedConsentPreference) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ffa029a8674e90e, []int{0}
}

func (m *RememberedConsentPreference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RememberedConsentPreference.Unmarshal(m, b)
}
func (m *RememberedConsentPreference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RememberedConsentPreference.Marshal(b, m, deterministic)
}
func (m *RememberedConsentPreference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RememberedConsentPreference.Merge(m, src)
}
func (m *RememberedConsentPreference) XXX_Size() int {
	return xxx_messageInfo_RememberedConsentPreference.Size(m)
}
func (m *RememberedConsentPreference) XXX_DiscardUnknown() {
	xxx_messageInfo_RememberedConsentPreference.DiscardUnknown(m)
}

var xxx_messageInfo_RememberedConsentPreference proto.InternalMessageInfo

func (m *RememberedConsentPreference) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *RememberedConsentPreference) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *RememberedConsentPreference) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func (m *RememberedConsentPreference) GetRequestMatchType() RememberedConsentPreference_RequestMatchType {
	if m != nil {
		return m.RequestMatchType
	}
	return RememberedConsentPreference_UNSPECIFIED
}

func (m *RememberedConsentPreference) GetRequestedResources() []string {
	if m != nil {
		return m.RequestedResources
	}
	return nil
}

func (m *RememberedConsentPreference) GetRequestedScopes() []string {
	if m != nil {
		return m.RequestedScopes
	}
	return nil
}

func (m *RememberedConsentPreference) GetReleaseType() RememberedConsentPreference_ReleaseType {
	if m != nil {
		return m.ReleaseType
	}
	return RememberedConsentPreference_UNKNOWN
}

func (m *RememberedConsentPreference) GetSelectedVisas() []*RememberedConsentPreference_Visa {
	if m != nil {
		return m.SelectedVisas
	}
	return nil
}

// Visa contains fields to match released visas user have.
type RememberedConsentPreference_Visa struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	By                   string   `protobuf:"bytes,3,opt,name=by,proto3" json:"by,omitempty"`
	Iss                  string   `protobuf:"bytes,4,opt,name=iss,proto3" json:"iss,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RememberedConsentPreference_Visa) Reset()         { *m = RememberedConsentPreference_Visa{} }
func (m *RememberedConsentPreference_Visa) String() string { return proto.CompactTextString(m) }
func (*RememberedConsentPreference_Visa) ProtoMessage()    {}
func (*RememberedConsentPreference_Visa) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ffa029a8674e90e, []int{0, 0}
}

func (m *RememberedConsentPreference_Visa) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RememberedConsentPreference_Visa.Unmarshal(m, b)
}
func (m *RememberedConsentPreference_Visa) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RememberedConsentPreference_Visa.Marshal(b, m, deterministic)
}
func (m *RememberedConsentPreference_Visa) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RememberedConsentPreference_Visa.Merge(m, src)
}
func (m *RememberedConsentPreference_Visa) XXX_Size() int {
	return xxx_messageInfo_RememberedConsentPreference_Visa.Size(m)
}
func (m *RememberedConsentPreference_Visa) XXX_DiscardUnknown() {
	xxx_messageInfo_RememberedConsentPreference_Visa.DiscardUnknown(m)
}

var xxx_messageInfo_RememberedConsentPreference_Visa proto.InternalMessageInfo

func (m *RememberedConsentPreference_Visa) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RememberedConsentPreference_Visa) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *RememberedConsentPreference_Visa) GetBy() string {
	if m != nil {
		return m.By
	}
	return ""
}

func (m *RememberedConsentPreference_Visa) GetIss() string {
	if m != nil {
		return m.Iss
	}
	return ""
}

func init() {
	proto.RegisterEnum("consents.RememberedConsentPreference_RequestMatchType", RememberedConsentPreference_RequestMatchType_name, RememberedConsentPreference_RequestMatchType_value)
	proto.RegisterEnum("consents.RememberedConsentPreference_ReleaseType", RememberedConsentPreference_ReleaseType_name, RememberedConsentPreference_ReleaseType_value)
	proto.RegisterType((*RememberedConsentPreference)(nil), "consents.RememberedConsentPreference")
	proto.RegisterType((*RememberedConsentPreference_Visa)(nil), "consents.RememberedConsentPreference.Visa")
}

func init() {
	proto.RegisterFile("proto/store/consents/store.proto", fileDescriptor_0ffa029a8674e90e)
}

var fileDescriptor_0ffa029a8674e90e = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xd1, 0x6f, 0xd3, 0x3e,
	0x10, 0xc7, 0x97, 0x76, 0xeb, 0xd6, 0xcb, 0x7e, 0x5b, 0xe4, 0x49, 0x3f, 0x45, 0xe3, 0x61, 0x51,
	0x9f, 0x0a, 0x52, 0x13, 0x51, 0x24, 0x5e, 0xd0, 0x1e, 0x58, 0x1b, 0x46, 0x05, 0x84, 0x92, 0xa6,
	0x20, 0x78, 0x20, 0x38, 0xce, 0xb5, 0x8d, 0x94, 0x34, 0xc1, 0x76, 0x27, 0xfa, 0x97, 0xf3, 0x8a,
	0x62, 0x37, 0x1b, 0x9a, 0x10, 0xec, 0xed, 0xee, 0x7b, 0xf7, 0xb9, 0x3b, 0xfb, 0x6c, 0x70, 0x2a,
	0x5e, 0xca, 0xd2, 0x13, 0xb2, 0xe4, 0xe8, 0xb1, 0x72, 0x2d, 0x70, 0x2d, 0x85, 0x76, 0x5d, 0x15,
	0x22, 0x47, 0x8d, 0x7a, 0x7e, 0xb1, 0x2c, 0xcb, 0x65, 0x8e, 0x9e, 0xd2, 0x93, 0xcd, 0xc2, 0x93,
	0x59, 0x81, 0x42, 0xd2, 0xa2, 0xd2, 0xa9, 0xbd, 0x9f, 0x07, 0xf0, 0x28, 0xc4, 0x02, 0x8b, 0x04,
	0x39, 0xa6, 0x23, 0xcd, 0x4d, 0x39, 0x2e, 0x90, 0xe3, 0x9a, 0x21, 0xb9, 0x00, 0x93, 0xe5, 0x19,
	0xae, 0x65, 0xbc, 0xa6, 0x05, 0xda, 0x86, 0x63, 0xf4, 0xbb, 0x21, 0x68, 0x29, 0xa0, 0x05, 0x92,
	0x17, 0x60, 0x32, 0x8e, 0x54, 0x62, 0x5c, 0x97, 0xb6, 0x5b, 0x8e, 0xd1, 0x37, 0x87, 0xe7, 0xae,
	0xee, 0xeb, 0x36, 0x7d, 0xdd, 0xa8, 0xe9, 0x1b, 0x82, 0x4e, 0xaf, 0x85, 0x1a, 0xc6, 0x1f, 0x55,
	0xc6, 0x77, 0x70, 0xfb, 0xdf, 0xb0, 0x4e, 0x57, 0x70, 0x0a, 0x84, 0xe3, 0xf7, 0x0d, 0x0a, 0x19,
	0x17, 0x54, 0xb2, 0x55, 0x2c, 0xb7, 0x15, 0xda, 0xfb, 0x8e, 0xd1, 0x3f, 0x19, 0x3e, 0x77, 0x9b,
	0x2b, 0x70, 0xff, 0x72, 0x3a, 0x37, 0xd4, 0xfc, 0xbb, 0x1a, 0x8f, 0xb6, 0x15, 0x86, 0x16, 0xbf,
	0xa7, 0x10, 0x0f, 0xce, 0x76, 0x1a, 0xa6, 0x31, 0x47, 0x51, 0x6e, 0x38, 0x43, 0x61, 0x1f, 0x38,
	0xed, 0x7e, 0x37, 0x24, 0xb7, 0xa1, 0xb0, 0x89, 0x90, 0xc7, 0x60, 0xdd, 0x01, 0x82, 0x95, 0x15,
	0x0a, 0xbb, 0xa3, 0xb2, 0x4f, 0x6f, 0xf5, 0x99, 0x92, 0x49, 0x04, 0xc7, 0x1c, 0x73, 0xa4, 0x02,
	0xf5, 0xec, 0x87, 0x6a, 0xf6, 0xa7, 0x0f, 0x9d, 0x5d, 0x91, 0x6a, 0x6c, 0x93, 0xdf, 0x39, 0xe4,
	0x03, 0x9c, 0x08, 0xcc, 0x91, 0xd5, 0xfd, 0x6f, 0x32, 0x41, 0x85, 0x7d, 0xe4, 0xb4, 0xfb, 0xe6,
	0xf0, 0xc9, 0xc3, 0xea, 0x7e, 0xcc, 0x04, 0x0d, 0xff, 0x6b, 0x2a, 0xd4, 0x9e, 0x38, 0x8f, 0x60,
	0xbf, 0x36, 0x08, 0x81, 0x7d, 0x35, 0xa8, 0x7e, 0x06, 0xca, 0x26, 0xff, 0x43, 0x47, 0x1f, 0x5d,
	0xed, 0xbe, 0x1b, 0xee, 0x3c, 0x72, 0x02, 0xad, 0x64, 0xab, 0x56, 0xda, 0x0d, 0x5b, 0xc9, 0x96,
	0x58, 0xd0, 0xce, 0x84, 0x50, 0xfb, 0xe9, 0x86, 0xb5, 0xd9, 0xbb, 0x04, 0xeb, 0xfe, 0x02, 0xc8,
	0x29, 0x98, 0xf3, 0x60, 0x36, 0xf5, 0x47, 0x93, 0x57, 0x13, 0x7f, 0x6c, 0xed, 0x11, 0x80, 0xce,
	0x6c, 0x7e, 0x35, 0xf3, 0x23, 0xcb, 0x20, 0xc7, 0x70, 0xf4, 0x32, 0xf8, 0x1c, 0xbd, 0x9e, 0x04,
	0xd7, 0x56, 0xab, 0x77, 0x09, 0xe6, 0x6f, 0x77, 0x40, 0x4c, 0x38, 0x9c, 0x07, 0x6f, 0x82, 0xf7,
	0x9f, 0x02, 0x6b, 0xaf, 0xce, 0x9c, 0xf9, 0x6f, 0xfd, 0x51, 0xe4, 0x8f, 0x2d, 0x83, 0x9c, 0xc1,
	0x69, 0xc3, 0xc5, 0x81, 0xef, 0x8f, 0xfd, 0xb1, 0xd5, 0xba, 0xfa, 0xf6, 0xe5, 0xeb, 0x32, 0x93,
	0xab, 0x4d, 0xe2, 0xb2, 0xb2, 0xf0, 0xae, 0xd5, 0x93, 0x1b, 0xe5, 0xe5, 0x26, 0x9d, 0xe6, 0x54,
	0x2e, 0x4a, 0x5e, 0x78, 0x2b, 0xa4, 0xb9, 0x5c, 0x31, 0xca, 0x71, 0xb0, 0xc0, 0x14, 0x39, 0x95,
	0x98, 0x0e, 0x28, 0x63, 0x28, 0xc4, 0x40, 0x20, 0xbf, 0xc9, 0x18, 0x0a, 0xfd, 0xb3, 0xbc, 0x3f,
	0x7d, 0xc9, 0xa4, 0xa3, 0xd4, 0x67, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x90, 0x7d, 0x3a,
	0xb1, 0x03, 0x00, 0x00,
}
